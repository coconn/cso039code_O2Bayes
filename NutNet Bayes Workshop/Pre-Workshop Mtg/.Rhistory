# VWC
fit <- aov(measurement ~ LUType + LUType/PitID + sampledepth + LUType:sampledepth, data=vwsubset)
summary(fit) # show results
# save table
fname = paste(pathsavetab, "regr_table_VWC.csv" ,sep="")
write.csv(anova(fit), file = fname, na = "")
# diagnostics
png(file = paste(pathsavetab, "ANOVAdiagnostics/ANOVAdiagnostics-VWC.png", sep=""),width=6,height=6,units="in",res=400)
layout(matrix(c(1,2,3,4),2,2)) # optional layout
plot(fit) # diagnostic plots
title("VWC ANOVA Diagnostics", line = -2, outer = TRUE)
dev.off()
layout(matrix(c(1,2,3),1,3)) # optional layout
# N2O
boxplot(meanN2Oppm ~ LUType,data=pitmodeldf, ylab="N2O (ppm)")
# CO2
boxplot(meanCO2ppm ~ LUType,data=pitmodeldf, ylab="CO2 (ppm)")
#text(x=1, y=14600, "p < 0.001", pos=3, cex=0.9)
#text(x=1, y=13200, "***", pos=3, cex=1.4)
# CH4
boxplot(meanCH4ppm ~ LUType,data=pitmodeldf, ylab="CH4 (ppm)")
layout(matrix(c(1,2,3),2,3)) # optional layout
# N2O
boxplot(meanN2Oppm ~ LUType + sampledepth,data=pitmodeldf, ylab="N2O (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
legend("topright", c("Agriculture", "Forest"), fill=colorvec)
# CO2
boxplot(meanCO2ppm ~ LUType + sampledepth,data=pitmodeldf, ylab="CO2 (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
atvec = c(1,2, 4,5, 7,8, 10,11, 13,14, 16,17, 19,20) # how to group boxes
colorvec = c("light grey","white")
namesvec = c("Ag 15","For 15","Ag 40","For 40","Ag 75","For 75","Ag 150","For 150","Ag 250","For 250","Ag 350","For 350","Ag 450","For 450")
layout(matrix(c(1,2,3),2,3)) # optional layout
# N2O
boxplot(meanN2Oppm ~ LUType + sampledepth,data=pitmodeldf, ylab="N2O (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
legend("topright", c("Agriculture", "Forest"), fill=colorvec)
# CO2
boxplot(meanCO2ppm ~ LUType + sampledepth,data=pitmodeldf, ylab="CO2 (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
layout(matrix(c(1,2,3),1,3)) # optional layout
# N2O
boxplot(meanN2Oppm ~ LUType + sampledepth,data=pitmodeldf, ylab="N2O (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
legend("topright", c("Agriculture", "Forest"), fill=colorvec)
# CO2
boxplot(meanCO2ppm ~ LUType + sampledepth,data=pitmodeldf, ylab="CO2 (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
boxplot(meanCH4ppm ~ LUType + sampledepth,data=pitmodeldf, ylab="CH4 (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
layout(matrix(c(1,2,3),1,4)) # optional layout
# N2O
boxplot(meanN2Oppm ~ LUType + sampledepth,data=pitmodeldf, ylab="N2O (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
legend("topright", c("Agriculture", "Forest"), fill=colorvec)
# CO2
boxplot(meanCO2ppm ~ LUType + sampledepth,data=pitmodeldf, ylab="CO2 (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
legend("topright", c("Agriculture", "Forest"), fill=colorvec)
# CH4
boxplot(meanCH4ppm ~ LUType + sampledepth,data=pitmodeldf, ylab="CH4 (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
layout(matrix(c(1,2,3),1,3)) # optional layout
# N2O
boxplot(meanN2Oppm ~ LUType + sampledepth,data=pitmodeldf, ylab="N2O (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
legend("topright", c("Agriculture", "Forest"), fill=colorvec)
# CO2
boxplot(meanCO2ppm ~ LUType + sampledepth,data=pitmodeldf, ylab="CO2 (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
legend("topright", c("Agriculture", "Forest"), fill=colorvec)
# CH4
boxplot(meanCH4ppm ~ LUType + sampledepth,data=pitmodeldf, ylab="CH4 (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
layout(matrix(c(1,2),1,2)) # optional layout
# N2O
boxplot(meanN2Oppm ~ LUType + sampledepth,data=pitmodeldf, ylab="N2O (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
legend("topright", c("Agriculture", "Forest"), fill=colorvec)
# CO2
boxplot(meanCO2ppm ~ LUType + sampledepth,data=pitmodeldf, ylab="CO2 (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
legend("topright", c("Agriculture", "Forest"), fill=colorvec)
layout(matrix(c(1,2,3),2,3)) # optional layout
# N2O
boxplot(meanN2Oppm ~ LUType + sampledepth,data=pitmodeldf, ylab="N2O (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
legend("topright", c("Agriculture", "Forest"), fill=colorvec)
# CO2
boxplot(meanCO2ppm ~ LUType + sampledepth,data=pitmodeldf, ylab="CO2 (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
layout(matrix(c(1,2,3,4),2,2)) # optional layout
# N2O
boxplot(meanN2Oppm ~ LUType + sampledepth,data=pitmodeldf, ylab="N2O (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
legend("topright", c("Agriculture", "Forest"), fill=colorvec)
# CO2
boxplot(meanCO2ppm ~ LUType + sampledepth,data=pitmodeldf, ylab="CO2 (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
legend("topright", c("Agriculture", "Forest"), fill=colorvec)
# CH4
boxplot(meanCH4ppm ~ LUType + sampledepth,data=pitmodeldf, ylab="CH4 (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
legend("topright", c("Agriculture", "Forest"), fill=colorvec)
dev.off()
# temp and VWC
layout(matrix(c(1,2,3,4,5),2,3)) # optional layout
# N2O
layout(matrix(c(1,2,3,4,5,6),2,3)) # optional layout
# N2O
boxplot(meanN2Oppm ~ LUType + sampledepth,data=pitmodeldf, ylab="N2O (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
legend("topright", c("Agriculture", "Forest"), fill=colorvec)
# CO2
boxplot(meanCO2ppm ~ LUType + sampledepth,data=pitmodeldf, ylab="CO2 (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
names(pitmodeldf)
layout(matrix(c(1,2,3,4,5,6),2,3)) # optional layout
# N2O
boxplot(meanN2Oppm ~ LUType + sampledepth,data=pitmodeldf, ylab="N2O (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
legend("topright", c("Agriculture", "Forest"), fill=colorvec)
# CO2
boxplot(meanCO2ppm ~ LUType + sampledepth,data=pitmodeldf, ylab="CO2 (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
legend("topright", c("Agriculture", "Forest"), fill=colorvec)
# CH4
boxplot(meanCH4ppm ~ LUType + sampledepth,data=pitmodeldf, ylab="CH4 (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
legend("topright", c("Agriculture", "Forest"), fill=colorvec)
# temp
boxplot(meandegC ~ LUType + sampledepth,data=pitmodeldf, ylab="Temperature (degrees C)", col=colorvec,  las = 2, at = atvec, names=namesvec)
legend("topright", c("Agriculture", "Forest"), fill=colorvec)
# vwc
boxplot(meanVW ~ LUType + sampledepth,data=pitmodeldf, ylab="VWC", col=colorvec,  las = 2, at = atvec, names=namesvec)
legend("topright", c("Agriculture", "Forest"), fill=colorvec)
layout(matrix(c(1,2,3,4,5,6),2,3)) # optional layout
# N2O
boxplot(meanN2Oppm ~ LUType + sampledepth,data=pitmodeldf, ylab="N2O (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
legend("topright", c("Agriculture", "Forest"), fill=colorvec)
# CO2
boxplot(meanCO2ppm ~ LUType + sampledepth,data=pitmodeldf, ylab="CO2 (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
legend("topright", c("Agriculture", "Forest"), fill=colorvec)
# CH4
boxplot(meanCH4ppm ~ LUType + sampledepth,data=pitmodeldf, ylab="CH4 (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
legend("topright", c("Agriculture", "Forest"), fill=colorvec)
# temp
boxplot(meandegC ~ LUType + sampledepth,data=pitmodeldf, ylab="Temperature (degrees C)", col=colorvec,  las = 2, at = atvec, names=namesvec)
legend("topright", c("Agriculture", "Forest"), fill=colorvec)
# vwc
boxplot(meanVW ~ LUType + sampledepth,data=pitmodeldf, ylab="VWC", col=colorvec,  las = 2, at = atvec, names=namesvec)
boxplot(meanVW ~ LUType + sampledepth,data=pitmodeldf, ylab="VWC", col=colorvec,  las = 2, at = atvec, names=namesvec)
names(pitmodeldf)
pitmodeldf$meanVW
View(pitmodeldf)
View(pitTDRsummary)
View(tempsubset)
names(tempsubset)
boxplot(measurement ~ LUType + sampledepth,data=tempsubset, ylab="Temperature (degrees C)", col=colorvec,  las = 2, at = atvec, names=namesvec)
boxplot(measurement ~ LUType + sampledepth,data=tempsubset)
atvec
boxplot(measurement ~ LUType + sampledepth,data=tempsubset, ylab="Temperature (degrees C)", col=colorvec,  las = 2, names=namesvec)
namesvec
View(tempsubset)
boxplot(measurement ~ LUType + sampledepth,data=tempsubset)
layout(matrix(c(1,2),1,2)) # optional layout
# temp
boxplot(measurement ~ LUType + sampledepth,data=tempsubset, ylab="Temperature (degrees C)", col=colorvec,  las = 2)
boxplot(measurement ~ LUType + sampledepth,data=tempsubset, ylab="Temperature (degrees C)", col=colorvec)
layout(matrix(c(1,2),1,2)) # optional layout
# temp
boxplot(measurement ~ LUType + sampledepth,data=tempsubset, ylab="Temperature (degrees C)", col=colorvec,  las = 2)
legend("bottomright", c("Agriculture", "Forest"), fill=colorvec)
boxplot(measurement ~ LUType + sampledepth,data=tempsubset, ylab="Temperature (deg. C)", col=colorvec,  las = 2)
legend("bottomright", c("Agriculture", "Forest"), fill=colorvec)
layout(matrix(c(1,2,3),1,3)) # optional layout
# N2O
boxplot(meanN2Oppm ~ ForAgri + sampledepth,data=pitmodeldf, ylab="N2O (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
boxplot(meanN2Oppm ~ LUType + sampledepth,data=pitmodeldf)
boxplot(meanN2Oppm ~ LUType + sampledepth,data=pitmodeldf, ylab="N2O (ppm)", col=colorvec,  las = 2)
namems(tempsubset)
names(tempsubset)
boxplot(measurement ~ ForAgri + sampledepth,data=tempsubset, ylab="Temperature (C)", col=colorvec,  las = 2)
legend("bottomright", c("Agriculture", "Forest"), fill=colorvec)
namesvec = c("Ag 0","For 0", "Ag 15","For 15","Ag 40","For 40","Ag 75","For 75","Ag 150","For 150","Ag 250","For 250","Ag 350","For 350","Ag 450","For 450")
boxplot(measurement ~ ForAgri + sampledepth,data=tempsubset, ylab="Temperature (C)", col=colorvec,  las = 2, names=namesvec)
boxplot(meanCH4ppm ~ LUType + sampledepth,data=pitmodeldf, ylab="CH4 (ppm)", col=colorvec,  las = 2,names=namesvec)
namesvec = c("Ag 15","For 15","Ag 40","For 40","Ag 75","For 75","Ag 150","For 150","Ag 250","For 250","Ag 350","For 350","Ag 450","For 450")
namesvec = c("Ag 15","For 15","Ag 40","For 40","Ag 75","For 75","Ag 150","For 150","Ag 250","For 250","Ag 350","For 350","Ag 450","For 450")
boxplot(meanCH4ppm ~ LUType + sampledepth,data=pitmodeldf, ylab="CH4 (ppm)", col=colorvec,  las = 2,names=namesvec)
atvec = c(1,2, 4,5, 7,8, 10,11, 13,14, 16,17, 19,20) # how to group boxes
boxplot(meanCH4ppm ~ LUType + sampledepth,data=pitmodeldf, ylab="CH4 (ppm)", col=colorvec,  las = 2, at = atvec, names=namesvec)
atvec = c(1,2, 4,5, 7,8, 10,11, 13,14, 16,17, 19,20, 22,23) # how to group boxes
colorvec = c("light grey","white")
namesvec = c("Ag 0","For 0", "Ag 15","For 15","Ag 40","For 40","Ag 75","For 75","Ag 150","For 150","Ag 250","For 250","Ag 350","For 350","Ag 450","For 450")
layout(matrix(c(1,2),1,2)) # optional layout
# temp
boxplot(measurement ~ ForAgri + sampledepth,data=tempsubset, ylab="Temperature (C)", col=colorvec,  las = 2, names=namesvec)
boxplot(measurement ~ ForAgri + sampledepth,data=tempsubset, ylab="Temperature (C)", col=colorvec,  las = 2, at = atvec, names=namesvec)
boxplot(meanVW ~ ForAgri + sampledepth,data=pitmodeldf, ylab=expression(Volumetric~Water~Content~"("*cm^"3"~cm^"-3"*")"), col=colorvec,  las = 2, at = atvec, names=namesvec)
names(vwsubset)
boxplot(measurement ~ ForAgri + sampledepth,data=vwsubset, ylab=expression(Volumetric~Water~Content~"("*cm^"3"~cm^"-3"*")"), col=colorvec,  las = 2, at = atvec, names=namesvec)
View(vwsubset)
boxplot(measurement ~ ForAgri + sampledepth,data=vwsubset, ylab=expression(Volumetric~Water~Content~"("*cm^"3"~cm^"-3"*")"), col=colorvec,  las = 2)
atvec3 = c(1,2, 4,5, 7,8, 10,11, 13,14, 16,17, 19,20, 22,23, 25,26, 28,29, 31,32, 34,35) # how to group boxes
colorvec = c("light grey","white")
namesvec2 = c("Ag 0","For 0", "Ag 15","For 15","Ag 40","For 40","Ag 75","For 75","Ag 150","For 150","Ag 250","For 250","Ag 350","For 350","Ag 450","For 450")
namesvec3 = c("Ag 0","For 0", "Ag 30","For 30","Ag 50","For 50","Ag 100","For 100","Ag 200","For 200","Ag 300","For 300","Ag 400","For 400","Ag 500","For 500","Ag 600","For 600","Ag 700","For 700","Ag 800","For 800","Ag 900","For 900")
boxplot(measurement ~ ForAgri + sampledepth,data=vwsubset, ylab=expression(Volumetric~Water~Content~"("*cm^"3"~cm^"-3"*")"), col=colorvec,  las = 2, at = atvec3, names=namesvec3)
legend("topright", c("Agriculture", "Forest"), fill=colorvec)
png(file = paste(pathsavefigs, "soilpit-gas-anovaboxplot-depthgroup-tempVWC.png", sep=""),width=12,height=8,units="in",res=400)
layout(matrix(c(1,2),1,2)) # optional layout
# temp
boxplot(measurement ~ ForAgri + sampledepth,data=tempsubset, ylab="Temperature (C)", col=colorvec,  las = 2, at = atvec2, names=namesvec2)
legend("bottomright", c("Agriculture", "Forest"), fill=colorvec)
# vwc
boxplot(measurement ~ ForAgri + sampledepth,data=vwsubset, ylab=expression(Volumetric~Water~Content~"("*cm^"3"~cm^"-3"*")"), col=colorvec,  las = 2, at = atvec3, names=namesvec3)
legend("bottomright", c("Agriculture", "Forest"), fill=colorvec)
dev.off()
layout(matrix(c(1,2),1,2)) # optional layout
# temp
boxplot(measurement ~ ForAgri + sampledepth,data=tempsubset, ylab="Temperature (C)", col=colorvec,  las = 2, at = atvec2, names=namesvec2)
legend("bottomright", c("Agriculture", "Forest"), fill=colorvec)
# vwc
atvec2 = c(1,2, 4,5, 7,8, 10,11, 13,14, 16,17, 19,20, 22,23) # how to group boxes
atvec3 = c(1,2, 4,5, 7,8, 10,11, 13,14, 16,17, 19,20, 22,23, 25,26, 28,29, 31,32, 34,35) # how to group boxes
colorvec = c("light grey","white")
namesvec2 = c("Ag 0","For 0", "Ag 15","For 15","Ag 40","For 40","Ag 75","For 75","Ag 150","For 150","Ag 250","For 250","Ag 350","For 350","Ag 450","For 450")
namesvec3 = c("Ag 0","For 0", "Ag 30","For 30","Ag 50","For 50","Ag 100","For 100","Ag 200","For 200","Ag 300","For 300","Ag 400","For 400","Ag 500","For 500","Ag 600","For 600","Ag 700","For 700","Ag 800","For 800","Ag 900","For 900")
# temp and VWC
png(file = paste(pathsavefigs, "soilpit-gas-anovaboxplot-depthgroup-tempVWC.png", sep=""),width=12,height=8,units="in",res=400)
layout(matrix(c(1,2),1,2)) # optional layout
# temp
boxplot(measurement ~ ForAgri + sampledepth,data=tempsubset, ylab="Temperature (C)", col=colorvec,  las = 2, at = atvec2, names=namesvec2)
legend("bottomright", c("Agriculture", "Forest"), fill=colorvec)
# vwc
boxplot(measurement ~ ForAgri + sampledepth,data=vwsubset, ylab=expression(Volumetric~Water~Content~"("*cm^"3"~cm^"-3"*")"), col=colorvec,  las = 2, at = atvec3, names=namesvec3)
legend("bottomright", c("Agriculture", "Forest"), fill=colorvec)
dev.off()
png(file = paste(pathsavefigs, "soilpit-gas-anovaboxplot-depthgroup-tempVWC.png", sep=""),width=12,height=4,units="in",res=400)
layout(matrix(c(1,2),1,2)) # optional layout
# temp
boxplot(measurement ~ ForAgri + sampledepth,data=tempsubset, ylab="Temperature (C)", col=colorvec,  las = 2, at = atvec2, names=namesvec2)
legend("bottomright", c("Agriculture", "Forest"), fill=colorvec)
# vwc
boxplot(measurement ~ ForAgri + sampledepth,data=vwsubset, ylab=expression(Volumetric~Water~Content~"("*cm^"3"~cm^"-3"*")"), col=colorvec,  las = 2, at = atvec3, names=namesvec3)
legend("bottomright", c("Agriculture", "Forest"), fill=colorvec)
dev.off()
View(pitmodeldf)
View(pitgassummary)
# PitCalcs-TraceGas-Rcode.R
# taking trace gas vial data associated with soil pits and making a tidy data set
# disrupted N project
# CS O'Connell, UMN EEB/IonE
# requires files created in GC-Rcode-fileloop.R
# output products:
# pitgasfull.csv: master csv of soil pit gas sampling
# pitgassummary.csv
########################################################################
# BRING IN DATA, MAKE DATAFRAME
library(lubridate)
vialDFfull <- read.csv("~/Documents/GITHUB/cso011code_TanguroN2OLosses/GC-Data-Raw-R/GC-Data-Rprocessed/vialDFfull.csv", stringsAsFactors=FALSE)
# make new column to ensure no repeats (easycallname = unique per chamber)
vialDFfull$easycallname <- do.call(paste, c(vialDFfull[c("Site", "SampleDate", "Chamber")], sep = "_"))
#in case I want to see all the names outside of R environment
#write.csv(vialDFfull, file=paste("vialDFfull_prac.csv", sep = ""), row.names=FALSE)
# where to save outputs
pathsavefiles = "~/Documents/GITHUB/cso038code_TanguroPitGas/Pit-Data-Rprocessed/"
pathsavefigs = "~/Documents/GITHUB/cso038code_TanguroPitGas/Pit-Data-Analyses/PitGasFigures/"
########################################################################
# GET PIT DATA
# Pits: m8, k4, c2 (forest); mu (mutun, soy)
toMatch <- c("cm") #"M8", "K4", "MU", "C2" # C2 doesn't work because it goes with some side-by-side chamber trials
pitgas <- subset(vialDFfull, grepl(paste(toMatch,collapse="|"), vialDFfull$SampleName))
########################################################################
# ELIMINATE UNACCEPTABLE DATA
# no pressure vials
nopressureid <- pitgas$Pressure=="N"
NoPressureCount <- length(which(pitgas$Pressure=="N"))
pitgas$ngN_cm3_N2O[nopressureid] <- NA
pitgas$ngC_cm3_CO2[nopressureid] <- NA
pitgas$ngC_cm3_CH4[nopressureid] <- NA
pitgas$N2Oppm[nopressureid] <- NA
pitgas$CO2ppm[nopressureid] <- NA
pitgas$CH4ppm[nopressureid] <- NA
# print info
print(paste("VIAL PRESSURE INFO: there was/were ", NoPressureCount, " vial(s) with no pressure.", sep = ""))
# some vials got repeated because of GC autosampler problems
rerunid <- grep("Rerun_", pitgas$SampleName)
pitgas$ngN_cm3_N2O[rerunid] <- NA
pitgas$ngC_cm3_CO2[rerunid] <- NA
pitgas$ngC_cm3_CH4[rerunid] <- NA
pitgas$N2Oppm[rerunid] <- NA
pitgas$CO2ppm[rerunid] <- NA
pitgas$CH4ppm[rerunid] <- NA
# any other vials that didn't seem to get sampled?
nodata <- pitgas$N2Oraw<1.0
pitgas$ngN_cm3_N2O[nodata] <- NA
pitgas$ngC_cm3_CO2[nodata] <- NA
pitgas$ngC_cm3_CH4[nodata] <- NA
pitgas$N2Oppm[nodata] <- NA
pitgas$CO2ppm[nodata] <- NA
pitgas$CH4ppm[nodata] <- NA
# recall that all three of these vials got rerun in the GC, so there is no data that is truly missing, only blank rows to be struck
# some of the land use codes are "r" because of the rerun vials
# site and LUtype have "re" and "r"
Rid <- grep("R", pitgas$Site)
samplenamesRe <- pitgas$SampleName[Rid]
sitetmp <- substr(samplenamesRe, 7, 8)
LUtmp <- substr(samplenamesRe, 7, 7)
pitgas$Site[Rid] <- sitetmp
pitgas$LUtype[Rid] <- LUtmp
########################################################################
# ADD USEFUL COLUMNS FOR PIT INFO
# pit ID
pitgas$pitID <- -9999
pitgas$pitID[grep("M8", pitgas$SampleName)] <- "M8"
pitgas$pitID[grep("K4", pitgas$SampleName)] <- "K4"
pitgas$pitID[grep("MU", pitgas$SampleName)] <- "MU"
pitgas$pitID[grep("C2", pitgas$SampleName)] <- "C2"
# depth
pitgas$sampledepth <- -9999
pitgas$sampledepth[grep("15cm", pitgas$SampleName)] <- 15
pitgas$sampledepth[grep("40cm", pitgas$SampleName)] <- 40
pitgas$sampledepth[grep("75cm", pitgas$SampleName)] <- 75
pitgas$sampledepth[grep("150cm", pitgas$SampleName)] <- 150
pitgas$sampledepth[grep("250cm", pitgas$SampleName)] <- 250
pitgas$sampledepth[grep("350cm", pitgas$SampleName)] <- 350
pitgas$sampledepth[grep("450cm", pitgas$SampleName)] <- 450
# sample order
pitgas$sampleorder <- -9999
pitgas$sampleorder[grep("cm-A", pitgas$SampleName)] <- "A"
pitgas$sampleorder[grep("cm-B", pitgas$SampleName)] <- "B"
pitgas$sampleorder[grep("cm-C", pitgas$SampleName)] <- "C"
########################################################################
# IMPROVE DATE INFO
pitgas$SampleDate <- gsub("[.]","/",pitgas$SampleDate)
pitgas$SampleDate <- as.Date(pitgas$SampleDate, format="%Y/%m/%d")
# month of sampling
pitgas <- transform(pitgas, Month = lubridate::month(pitgas$SampleDate, label=TRUE))
########################################################################
# BRING IN THE CENA JANKOWSKI DATA, RBIND
cenapitvials <- read.csv("~/Documents/GITHUB/cso011code_TanguroN2OLosses/GC-Data-Raw-R/GC-Data-RawFolders/2015 Feb CENA Jankowski data/cenajankowskipitdata.csv", stringsAsFactors=FALSE)
# make dates the same
cenapitvials$SampleDate <- as.Date(cenapitvials$SampleDate, format="%m/%d/%y")
# throw out that insanely high CO2 measurement
cenapitvials$CO2ppm[grep("122,658,983", cenapitvials$CO2ppm)] <- NA
# make sure these are numeric
cenapitvials$N2Oppm <- as.numeric(cenapitvials$N2Oppm)
cenapitvials$CO2ppm <- as.numeric(cenapitvials$CO2ppm)
cenapitvials$CH4ppm <- as.numeric(cenapitvials$CH4ppm)
# combine
pitgas <- rbind(pitgas,cenapitvials)
# MU and MU are different for some reason when I try to graph them; this line solves that
pitgas$pitID[grep("MU", pitgas$pitID)] <- "MU"
########################################################################
# SAVE CSV
View(pitgas)
library(R2OpenBUGS)
library(R2jags)
install.packages('R2jags')
library(R2jags)
library(R2jags)
version()
version
zen()
# jags test
## to use OpenBUGS instead, install "R2OpenBUGS" package
## replace "jags" names with "bugs"
## model should work unaltered
# Kery Ch 7: goal is Bayesian t-test, do group means differ significantly?
# generating data
n1 <- 60
n2 <- 40
mu1 <- 105
mu2 <- 77.5
sigma <- 2.75
# adding error and combining into one dataset
n <- n1+n2
# indicator for pop
x <- rep(c(0,1), c(n1,n2))
# intercept (alpha) is grand mean
alpha <- mu1
# slope (beta) is difference in group means
beta <- mu2-mu1
# expected value is linear equation
E.y <- alpha + beta*x
# observed data is expected value plus error
y.obs <- rnorm(n=n, mean=E.y, sd=sigma)
boxplot(y.obs~x, col='grey')
# frequentist (lm) test
fit <- lm(y.obs~x)
summary(fit)
anova(fit)
# JAGS
install.packages('R2jags')
library(R2jags)
getwd()
zen()
# jags test
## to use OpenBUGS instead, install "R2OpenBUGS" package
## replace "jags" names with "bugs"
## model should work unaltered
# Kery Ch 7: goal is Bayesian t-test, do group means differ significantly?
# generating data
n1 <- 60
n2 <- 40
mu1 <- 105
mu2 <- 77.5
sigma <- 2.75
# adding error and combining into one dataset
n <- n1+n2
# indicator for pop
x <- rep(c(0,1), c(n1,n2))
# intercept (alpha) is grand mean
alpha <- mu1
# slope (beta) is difference in group means
beta <- mu2-mu1
# expected value is linear equation
E.y <- alpha + beta*x
# observed data is expected value plus error
y.obs <- rnorm(n=n, mean=E.y, sd=sigma)
boxplot(y.obs~x, col='grey')
# frequentist (lm) test
fit <- lm(y.obs~x)
summary(fit)
anova(fit)
library(R2jags)
#setwd('~/Dropbox/Bayes')
###SET YOUR WORKING DIRECTORY HERE
setwd('~/Desktop/RESEARCH PROJECTS/cso040_O2Bayes')
# Model update
sink('kery-JAGS.R')
cat(" model{
# Priors
mu1 ~ dnorm(0,0.001)
delta ~ dnorm(0,0.001)
sigma ~ dunif(0,10)
tau <- 1/(sigma*sigma)
# Likelihood
for(i in 1:n){
mu[i] <- mu1 + delta*x[i]
y[i] ~ dnorm(mu[i], tau)
residual[i] <- y[i] - mu[i]	# define residuals
}
# Derived Vars
mu2 <- mu1 + delta
}
", fill=TRUE)
sink()
# jags test
## to use OpenBUGS instead, install "R2OpenBUGS" package
## replace "jags" names with "bugs"
## model should work unaltered
# Kery Ch 7: goal is Bayesian t-test, do group means differ significantly?
# generating data
n1 <- 60
n2 <- 40
mu1 <- 105
mu2 <- 77.5
sigma <- 2.75
# adding error and combining into one dataset
n <- n1+n2
# indicator for pop
x <- rep(c(0,1), c(n1,n2))
# intercept (alpha) is grand mean
alpha <- mu1
# slope (beta) is difference in group means
beta <- mu2-mu1
# expected value is linear equation
E.y <- alpha + beta*x
# observed data is expected value plus error
y.obs <- rnorm(n=n, mean=E.y, sd=sigma)
boxplot(y.obs~x, col='grey')
# frequentist (lm) test
fit <- lm(y.obs~x)
summary(fit)
anova(fit)
# JAGS
#install.packages('R2jags')
library(R2jags)
#setwd('~/Dropbox/Bayes')
###SET YOUR WORKING DIRECTORY HERE
setwd('~/Desktop/RESEARCH PROJECTS/cso040_O2Bayes/Pre-Workshop Mtg')
# Model update
sink('kery-JAGS.R')
cat(" model{
# Priors
mu1 ~ dnorm(0,0.001)
delta ~ dnorm(0,0.001)
sigma ~ dunif(0,10)
tau <- 1/(sigma*sigma)
# Likelihood
for(i in 1:n){
mu[i] <- mu1 + delta*x[i]
y[i] ~ dnorm(mu[i], tau)
residual[i] <- y[i] - mu[i]	# define residuals
}
# Derived Vars
mu2 <- mu1 + delta
}
", fill=TRUE)
sink()
# data to pass to jags
jags.data <- list('x'=x,	# population indicator
'y'=y.obs,	# measurements (random normal)
'n'=n)	# number of observations
# function to create random inital starts
inits <- function(){list(mu1=rnorm(1), delta=rnorm(1), sigma=rlnorm(1))}
# e.g.
inits()
params <- c("mu1","delta","mu2","residual")
# MCMC settings
# MCMC settings
nc <- 3	# number of chains
ni <- 3000	# number of draws from posterior for each chain
nb <- 1000 	# number of draws to discard as burn-in
nt <- 5	# thinning rate
out <- jags(data=jags.data, inits=inits, parameters=params, model="kery-JAGS.R", n.thin=nt, n.chains=nc, n.burnin=nb, n.iter=ni)
print(out, dig=3)
# plot residuals
plot(out$BUGSoutput$mean$residual,las=1)
abline(h=0)
# extract estimates of interest (ignoring residuals)
out.table <- data.frame(out$BUGSoutput$summary)[1:4,]
out.table$param <- rownames(out.table)
# main result: does delta differ from zero?
# "traditional" way: plot mu1 and mu2 with 95% credible interval
require(ggplot2)
p <- ggplot(out.table[3:4,],aes(y=mean,x=param))
p + geom_pointrange(aes(ymax=X97.5.,ymin=X2.5.))
delta.dat <- out$BUGSoutput$sims.list$delta
h <- qplot(delta.dat,geom='density')
h + xlim(-30,0)
delta.dat <- out$BUGSoutput$sims.list$delta
h <- qplot(delta.dat,geom='density')
h + xlim(-30,0)
